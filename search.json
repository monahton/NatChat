[{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://monahton.github.io/NatChat/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://monahton.github.io/NatChat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Monah Abou Alezz. Author, maintainer, copyright holder.","code":""},{"path":"https://monahton.github.io/NatChat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Abou Alezz M (2025). NatChat: Chatting Nature Journals Current Issue using local Language Model. R package version 1.0.1, https://github.com/monahton/NatChat.","code":"@Manual{,   title = {NatChat: Chatting with Nature Journals Current Issue using a local Language Model},   author = {Monah {Abou Alezz}},   year = {2025},   note = {R package version 1.0.1},   url = {https://github.com/monahton/NatChat}, }"},{"path":[]},{"path":"https://monahton.github.io/NatChat/index.html","id":"id_-overview","dir":"","previous_headings":"","what":"📦 Overview","title":"Chatting with Nature Journals Current Issue using a local Language Model","text":"NatChat R package designed facilitate seamless interaction current issues journals published Nature Portfolio. inspired biorecap R package developed talented Stephen Turner. NatChat provides functions : Identify available Nature journals supported package. Scrape retrieve article abstracts latest issues Nature journals. Construct prompts summarize articles using large language models (LLMs). Generate natural language summaries via ollama interface. Format output markdown tables, reports, summaries. package particularly useful researchers, educators, clinicians aiming stay updated latest scientific literature across multiple disciplines automated summarization easy--use interfaces.","code":""},{"path":"https://monahton.github.io/NatChat/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"💻 Installation","title":"Chatting with Nature Journals Current Issue using a local Language Model","text":"can install development version NatChat GitHub :","code":"if (!requireNamespace(\"pak\", quietly = TRUE)) {   install.packages(\"pak\") } pak::pak(\"monahton/NatChat\") # Load the package library(NatChat)"},{"path":"https://monahton.github.io/NatChat/index.html","id":"id_-requirements-ollama-setup","dir":"","previous_headings":"","what":"👉 Requirements: Ollama Setup","title":"Chatting with Nature Journals Current Issue using a local Language Model","text":"NatChat uses ollamar package interface local large language models (LLMs) powered Ollama. using NatChat’s summarization functions, ensure Ollama software installed machine: Download install Ollama official site. installed, verify setup R: Make sure Ollama running accessible R proceeding summarization tasks.","code":"library(NatChat) test_connection()    # Checks if Ollama is correctly connected list_models()        # Lists available LLM models for summarization"},{"path":[]},{"path":"https://monahton.github.io/NatChat/index.html","id":"id_️-development--contributing","dir":"","previous_headings":"","what":"🛠️ Development & Contributing","title":"Chatting with Nature Journals Current Issue using a local Language Model","text":"NatChat open-source project hosted GitHub actively developed. Contributions suggestions welcome! 🔧 Open issues: https://github.com/monahton/NatChat/issues 📬 Email: aboualezz.monah@hsr.🤝 Contributuons Pull Requests encouraged!","code":""},{"path":"https://monahton.github.io/NatChat/index.html","id":"writing_hand-author","dir":"","previous_headings":"","what":"✍️ Author","title":"Chatting with Nature Journals Current Issue using a local Language Model","text":"Monah Abou Alezz, PhD – aboualezz.monah@hsr.. San Raffaele Telethon Institute Gene Therapy (SR-TIGET) IRCCS San Raffaele Scientific Institute, Milan, Italy 🌍 Personal website","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Summarization Prompts to Articles — add_prompt","title":"Add Summarization Prompts to Articles — add_prompt","text":"Adds prompt column data frame scientific articles, suitable use language model summarization tool. Prompts generated using build_prompt() function, based article titles abstracts.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Summarization Prompts to Articles — add_prompt","text":"","code":"add_prompt(article, ...)"},{"path":"https://monahton.github.io/NatChat/reference/add_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Summarization Prompts to Articles — add_prompt","text":"article data frame tibble containing least columns \"title\" \"abstract\". ... Additional arguments passed build_prompt(), nsentences.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Summarization Prompts to Articles — add_prompt","text":"modified data frame class article_prompt, including additional column \"prompt\" containing structured summarization prompts.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_prompt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Summarization Prompts to Articles — add_prompt","text":"function checks presence required columns proceeding. applies build_prompt() row-wise generate summarization prompts. function typically used retrieving articles via get_articles() get_article(), prepare data summarization language model (e.g., using ollama::generate()).","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Summarization Prompts to Articles — add_prompt","text":"","code":"if (FALSE) { # \\dontrun{ papers <- get_articles(\"Nature Medicine\") papers_with_prompts <- add_prompt(papers, nsentences = 3) cat(papers_with_prompts$prompt[1]) } # }"},{"path":"https://monahton.github.io/NatChat/reference/add_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Summaries for Articles — add_summary","title":"Generate Summaries for Articles — add_summary","text":"function generates concise summaries article given data frame, using specified language model (LLM). summaries generated based prompts previously added data frame.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Summaries for Articles — add_summary","text":"","code":"add_summary(article, model = \"llama3.1\", host = NULL)"},{"path":"https://monahton.github.io/NatChat/reference/add_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Summaries for Articles — add_summary","text":"article data frame tibble containing least \"prompt\" column, created using build_prompt() add_prompt(). model Character string. name LLM model use generating summaries. Default \"llama3.1\". host Character string NULL. host used ollamar::generate function. Default NULL.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Summaries for Articles — add_summary","text":"modified data frame class article_summary, including additional column \"summary\" containing generated summaries.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Summaries for Articles — add_summary","text":"function iterates article generates summary using specified LLM model. progress bar shown track summarization process. newlines within text fields removed ensure clean formatting. function typically used applying add_prompt() prepare dataset summarization. progress bar updates article summaries generated. final summary column contain output summarization process, ready processing analysis.","code":""},{"path":"https://monahton.github.io/NatChat/reference/add_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Summaries for Articles — add_summary","text":"","code":"if (FALSE) { # \\dontrun{ papers <- get_article(journal = \"Nature Medicine\") papers_with_prompts <- add_prompt(papers, nsentences = 3) summarized_papers <- add_summary(papers_with_prompts) } # }"},{"path":"https://monahton.github.io/NatChat/reference/build_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Text Prompt for Summarizing an Article — build_prompt","title":"Construct a Text Prompt for Summarizing an Article — build_prompt","text":"Builds structured prompt article's title abstract, designed input language model. prompt emphasizes extracting key findings, methodology, tone, customizable via instructions.","code":""},{"path":"https://monahton.github.io/NatChat/reference/build_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Text Prompt for Summarizing an Article — build_prompt","text":"","code":"build_prompt(   title,   abstract,   nsentences = 3L,   instructions = c(\"I am giving you a paper's title and abstract.\",     \"Summarize the paper in as many sentences as I instruct.\",     \"Do not include any preamble text to the summary,\",     \"just give me the summary with no preface or intro sentence.\",     \"Focus on the findings in the last 2 sentences of the abstract.\",     \"If there is no abstract, just write abstract is not available.\",     \"Highlight any novel contribution or claim made in the abstract.\",     \"Briefly mention the key method or dataset, if explicitly stated.\",     \"Indicate the tone of confidence (e.g., suggestive, strong evidence, preliminary).\",           \"Optionally, provide a one-sentence lay summary for a general audience.\") )"},{"path":"https://monahton.github.io/NatChat/reference/build_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Text Prompt for Summarizing an Article — build_prompt","text":"title Character string. title article. abstract Character string. abstract article. unavailable, include default message. nsentences Integer. number sentences required summary. Default 3. Must positive whole number. instructions Character vector. set instructions guiding summarization. Defaults structured template emphasizing main findings, methods, novelty, tone.","code":""},{"path":"https://monahton.github.io/NatChat/reference/build_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Text Prompt for Summarizing an Article — build_prompt","text":"character string representing structured prompt use language model summarization tool.","code":""},{"path":"https://monahton.github.io/NatChat/reference/build_prompt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a Text Prompt for Summarizing an Article — build_prompt","text":"generated prompt follows structured format: Lists instructions (customizable via instructions). States number summary sentences required (nsentences). Embeds article title abstract. abstract missing available, prompt explicitly states . default instructions vector can modified adapt tone focus summary, prioritizing method, dataset, confidence tone, accessibility non-specialists.","code":""},{"path":"https://monahton.github.io/NatChat/reference/build_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Text Prompt for Summarizing an Article — build_prompt","text":"","code":"title <- \"Deep Learning for Genomic Data Analysis\" abstract <- \"This study explores deep learning in diverse tasks highlighting predictive accuracy.\" prompt <- build_prompt(title, abstract, nsentences = 3) cat(prompt) #> I am giving you a paper's title and abstract. Summarize the paper in as many sentences as I instruct. Do not include any preamble text to the summary, just give me the summary with no preface or intro sentence. Focus on the findings in the last 2 sentences of the abstract. If there is no abstract, just write abstract is not available. Highlight any novel contribution or claim made in the abstract. Briefly mention the key method or dataset, if explicitly stated. Indicate the tone of confidence (e.g., suggestive, strong evidence, preliminary). Optionally, provide a one-sentence lay summary for a general audience. #> Number of sentences in summary: 3 #> Title: Deep Learning for Genomic Data Analysis #> Abstract: This study explores deep learning in diverse tasks highlighting predictive accuracy."},{"path":"https://monahton.github.io/NatChat/reference/check_ollama.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Ollama Installation — check_ollama","title":"Check Ollama Installation — check_ollama","text":"Verify whether Ollama backend properly installed available testing connection retrieving list local models.","code":""},{"path":"https://monahton.github.io/NatChat/reference/check_ollama.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Ollama Installation — check_ollama","text":"","code":"check_ollama(verbose = TRUE)"},{"path":"https://monahton.github.io/NatChat/reference/check_ollama.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Ollama Installation — check_ollama","text":"verbose Logical. informative messages printed console? Default TRUE.","code":""},{"path":"https://monahton.github.io/NatChat/reference/check_ollama.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Ollama Installation — check_ollama","text":"Logical TRUE Ollama installed responding; otherwise returns FALSE. Also prints diagnostic messages verbose = TRUE.","code":""},{"path":"https://monahton.github.io/NatChat/reference/check_ollama.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Ollama Installation — check_ollama","text":"function internally calls ollamar::test_connection() ollamar::list_models() check availability Ollama service confirm least one local model installed.","code":""},{"path":"https://monahton.github.io/NatChat/reference/check_ollama.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Ollama Installation — check_ollama","text":"","code":"if (FALSE) { # \\dontrun{ check_ollama() } # }"},{"path":"https://monahton.github.io/NatChat/reference/filter_articles.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Articles Based on Whitelist Terms — filter_articles","title":"Filter Articles Based on Whitelist Terms — filter_articles","text":"function filters data frame articles, retaining contain least one specified whitelist terms either title abstract. allows easy extraction articles relevant set predefined topics.","code":""},{"path":"https://monahton.github.io/NatChat/reference/filter_articles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Articles Based on Whitelist Terms — filter_articles","text":"","code":"filter_articles(article, whitelist_terms)"},{"path":"https://monahton.github.io/NatChat/reference/filter_articles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Articles Based on Whitelist Terms — filter_articles","text":"article data frame tibble containing least \"title\" \"abstract\" columns. whitelist_terms character vector terms used filter articles matching title abstract.","code":""},{"path":"https://monahton.github.io/NatChat/reference/filter_articles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Articles Based on Whitelist Terms — filter_articles","text":"filtered data frame containing articles least one whitelist terms found title abstract.","code":""},{"path":"https://monahton.github.io/NatChat/reference/filter_articles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Articles Based on Whitelist Terms — filter_articles","text":"function combines \"title\" \"abstract\" columns single text string uses regular expression matching search presence specified whitelist terms. search case-insensitive. articles match one whitelist terms retained output data frame.","code":""},{"path":"https://monahton.github.io/NatChat/reference/filter_articles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Articles Based on Whitelist Terms — filter_articles","text":"","code":"if (FALSE) { # \\dontrun{ papers <- get_article(journal = \"Nature Medicine\") filtered_papers <- filter_articles(papers, whitelist_terms = c(\"CRISPR\", \"gene therapy\")) } # }"},{"path":"https://monahton.github.io/NatChat/reference/get_articles.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","title":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","text":"function scrapes articles current issue specified Nature journal, extracting article titles, URLs, abstracts robust fallback handling.","code":""},{"path":"https://monahton.github.io/NatChat/reference/get_articles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","text":"","code":"get_articles(journal, article_selector = \".c-card.c-card--flush\",              title_selector = \"h3 a\", url_selector = \"h3 a\",              abstract_selector = \".c-card__summary\", verbose = FALSE)"},{"path":"https://monahton.github.io/NatChat/reference/get_articles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","text":"journal Character string. full name Nature journal (e.g., \"Nature Biotechnology\", \"Nature Medicine\"). article_selector Character string. CSS selector locating articles journal's webpage. Default \".c-card.c-card–flush\". title_selector Character string. CSS selector extracting article titles. Default \"h3 \". url_selector Character string. CSS selector extracting article URLs. Default \"h3 \". abstract_selector Character string. CSS selector extracting article abstracts. Default \".c-card__summary\". verbose Logical. TRUE, prints messages progress internal steps. Default FALSE.","code":""},{"path":"https://monahton.github.io/NatChat/reference/get_articles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","text":"tibble columns: title, url, abstract, source. articles found, returns empty tibble.","code":""},{"path":"https://monahton.github.io/NatChat/reference/get_articles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","text":"journal argument matched (case-insensitively) available entries nat_journals(). found, informative error thrown. Abstracts missing replaced \"Abstract available\". titles, URLs, abstracts differ length, truncated shortest length warning.","code":""},{"path":"https://monahton.github.io/NatChat/reference/get_articles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Articles from a Nature Journal's Current Issue — get_articles","text":"","code":"get_articles(\"Nature Biotechnology\") #> # A tibble: 37 × 4 #>    title                                                   url   abstract source #>    <chr>                                                   <chr> <chr>    <chr>  #>  1 Biopharma dives into tumor-seeking radioactive drugs    http… Big pha… Natur… #>  2 Consternation follows Marks’ FDA departure              http… Abstrac… Natur… #>  3 FDA pushes to replace animal testing                    http… Abstrac… Natur… #>  4 Fruit waste for catwalk fashion                         http… Abstrac… Natur… #>  5 Brazil’s low-cost CAR-Ts take on Global South           http… Abstrac… Natur… #>  6 Biotech news from around the world                      http… Abstrac… Natur… #>  7 Precision neuroscience                                  http… Develop… Natur… #>  8 Lengthy delays in H5N1 genome submissions to GISAID     http… Abstrac… Natur… #>  9 Openness guides discovery                               http… Abstrac… Natur… #> 10 The Protein Design Archive (PDA): insights from 40 yea… http… Abstrac… Natur… #> # ℹ 27 more rows get_articles(\"Nature Reviews Genetics\", verbose = TRUE) #> Accessing URL: https://www.nature.com/nrg/current-issue #> Extracting articles from https://www.nature.com/nrg/current-issue #> 9 articles successfully extracted. #> # A tibble: 9 × 4 #>   title                                                    url   abstract source #>   <chr>                                                    <chr> <chr>    <chr>  #> 1 Spatial miRNomics: towards the integration of microRNAs… http… In this… Natur… #> 2 Genomic data sharing: you don’t know what you’ve got (t… http… Reflect… Natur… #> 3 Decoding cell–cell communication using spatial transcri… http… In this… Natur… #> 4 From genome to drug: the hidden story of diversity       http… In this… Natur… #> 5 The genesis of paleogenetics                             http… In this… Natur… #> 6 The design and engineering of synthetic genomes          http… In this… Natur… #> 7 The effects of loss of Y chromosome on male health       http… Loss of… Natur… #> 8 Genomic landscape of cancer in racially and ethnically … http… Studyin… Natur… #> 9 Epigenetic ageing clocks: statistical methods and emerg… http… Epigene… Natur…"},{"path":"https://monahton.github.io/NatChat/reference/nat_journals.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Nature Journals and Their Slugs — nat_journals","title":"List Available Nature Journals and Their Slugs — nat_journals","text":"function returns data frame Nature journals supported Natchat package, including full names URL slugs (used links programmatic access). Optionally, users can provide journal name filter display matching journal slug.","code":""},{"path":"https://monahton.github.io/NatChat/reference/nat_journals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Nature Journals and Their Slugs — nat_journals","text":"","code":"nat_journals(journal = NULL)"},{"path":"https://monahton.github.io/NatChat/reference/nat_journals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Available Nature Journals and Their Slugs — nat_journals","text":"journal Optional character string. full name Nature journal (case-insensitive) filter list. NULL (default), returns full table available journals slugs.","code":""},{"path":"https://monahton.github.io/NatChat/reference/nat_journals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Nature Journals and Their Slugs — nat_journals","text":"tibble two columns: journal full name journal slug short URL identifier (slug) used Nature journal web addresses","code":""},{"path":"https://monahton.github.io/NatChat/reference/nat_journals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Available Nature Journals and Their Slugs — nat_journals","text":"slug corresponds subdirectory used Nature URLs (e.g., \"https://www.nature.com/nbt/\" Nature Biotechnology). Journal name matching case-insensitive supports exact matches (partial fuzzy matching).","code":""},{"path":"https://monahton.github.io/NatChat/reference/nat_journals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Available Nature Journals and Their Slugs — nat_journals","text":"","code":"nat_journals() #> # A tibble: 68 × 2 #>    journal                        slug             #>    <chr>                          <chr>            #>  1 Nature                         nature           #>  2 Nature Aging                   nataging         #>  3 Nature Astronomy               natastron        #>  4 Nature Biomedical Engineering  natbiomedeng     #>  5 Nature Biotechnology           nbt              #>  6 Nature Cancer                  natcancer        #>  7 Nature Cardiovascular Research natcardiovascres #>  8 Nature Catalysis               natcatal         #>  9 Nature Cell Biology            ncb              #> 10 Nature Chemical Biology        nchembio         #> # ℹ 58 more rows nat_journals(\"Nature Medicine\") #> # A tibble: 1 × 2 #>   journal         slug  #>   <chr>           <chr> #> 1 Nature Medicine nm    nat_journals(\"nature biotechnology\") #> # A tibble: 1 × 2 #>   journal              slug  #>   <chr>                <chr> #> 1 Nature Biotechnology nbt"},{"path":"https://monahton.github.io/NatChat/reference/save_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Report as CSV and HTML — save_report","title":"Save Report as CSV and HTML — save_report","text":"Save data frame article metadata CSV file HTML file markdown-styled table. Options provided control file format outputs verbosity.","code":""},{"path":"https://monahton.github.io/NatChat/reference/save_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Report as CSV and HTML — save_report","text":"","code":"save_report(input, filename, save_csv, save_html, title, cols, width, verbose, outdir)"},{"path":"https://monahton.github.io/NatChat/reference/save_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Report as CSV and HTML — save_report","text":"input data frame containing article data (e.g., \"title\", \"summary\", \"url\"). filename character string specifying base filename (without extension). save_csv Logical. Save output CSV file? Default TRUE. save_html Logical. Save output HTML file? Default TRUE. title character string specifying HTML page title. Default \"Article Summary Report\". cols character vector column names include output. Default c(\"title\", \"summary\"). width numeric vector column widths HTML table. Default c(1, 3). verbose Logical. messages printed? Default TRUE. outdir character string specifying directory save files. Default current working directory \".\".","code":""},{"path":"https://monahton.github.io/NatChat/reference/save_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Report as CSV and HTML — save_report","text":"Files written disk specified formats. function returns (invisibly) list saved file paths.","code":""},{"path":"https://monahton.github.io/NatChat/reference/save_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Report as CSV and HTML — save_report","text":"timestamp appended base filename uniquely identify output. save_csv save_html FALSE, files saved message issued (verbose = TRUE).","code":""},{"path":"https://monahton.github.io/NatChat/reference/save_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Report as CSV and HTML — save_report","text":"","code":"if (FALSE) { # \\dontrun{ papers <- get_articles(journal = \"Nature Medicine\") papers_with_summary <- add_summary(papers) save_report(papers_with_summary, save_csv = TRUE, save_html = TRUE) } # }"},{"path":"https://monahton.github.io/NatChat/reference/summarize_journal.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a Nature Journal Issue — summarize_journal","title":"Summarize a Nature Journal Issue — summarize_journal","text":"Retrieve summarize abstracts current issue selected Nature Portfolio journal using local LLM save output CSV /HTML.","code":""},{"path":"https://monahton.github.io/NatChat/reference/summarize_journal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a Nature Journal Issue — summarize_journal","text":"","code":"summarize_journal(journal, model, filename, save_csv, save_html, verbose, outdir)"},{"path":"https://monahton.github.io/NatChat/reference/summarize_journal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a Nature Journal Issue — summarize_journal","text":"journal character string indicating name supported Nature journal (e.g., \"Nature Biotechnology\"). model character string specifying local Ollama model use summarization (e.g., \"llama3:instruct\"). filename character string specifying base filename saving report. Default \"natchat_summary\". save_csv Logical. Save results CSV file? Default TRUE. save_html Logical. Save results HTML file? Default TRUE. verbose Logical. informative messages printed console? Default TRUE. outdir character string specifying directory save output files. Default current working directory \".\".","code":""},{"path":"https://monahton.github.io/NatChat/reference/summarize_journal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a Nature Journal Issue — summarize_journal","text":"Invisibly returns list file paths (saved). Generates summarized article metadata optionally saves disk.","code":""},{"path":"https://monahton.github.io/NatChat/reference/summarize_journal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize a Nature Journal Issue — summarize_journal","text":"function convenience wrapper around get_articles(), add_prompt(), add_summary(), save_report(). scrapes current issue, summarizes abstracts using local LLM, exports result.","code":""},{"path":"https://monahton.github.io/NatChat/reference/summarize_journal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a Nature Journal Issue — summarize_journal","text":"","code":"if (FALSE) { # \\dontrun{ summarize_journal(journal = \"Nature Medicine\", model = \"llama3\", save_csv = TRUE, save_html = TRUE) } # }"},{"path":"https://monahton.github.io/NatChat/reference/tt_article.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Articles as a TinyTable — tt_article","title":"Format Articles as a TinyTable — tt_article","text":"function formats data frame articles markdown-styled table using tinytable package. allows select specific columns article data adjust column widths clean, formatted output.","code":""},{"path":"https://monahton.github.io/NatChat/reference/tt_article.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Articles as a TinyTable — tt_article","text":"","code":"tt_article(article, cols = c(\"title\", \"summary\"), width = c(1, 3))"},{"path":"https://monahton.github.io/NatChat/reference/tt_article.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Articles as a TinyTable — tt_article","text":"article data frame containing article information (e.g., \"title\", \"summary\", \"url\"). cols character vector column names include table. Default c(\"title\", \"summary\"). width numeric vector specifying column widths. Default c(1, 3).","code":""},{"path":"https://monahton.github.io/NatChat/reference/tt_article.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Articles as a TinyTable — tt_article","text":"formatted markdown table character string, ready displayed markdown-supported environments.","code":""},{"path":"https://monahton.github.io/NatChat/reference/tt_article.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Articles as a TinyTable — tt_article","text":"function first ensures specified columns exist data frame length cols matches length width. formats \"title\" column markdown link, using article's URL (provided), selects requested columns displayed table. resulting table formatted markdown easy integration markdown environments.","code":""},{"path":"https://monahton.github.io/NatChat/reference/tt_article.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Articles as a TinyTable — tt_article","text":"","code":"if (FALSE) { # \\dontrun{ papers <- get_articles(journal = \"Nature Biotechnology\") papers_with_summary <- add_summary(papers) tt_article(papers_with_summary) } # }"}]
