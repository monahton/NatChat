% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{add_summary}
\alias{add_summary}
\title{Generate Summaries for Articles}
\usage{
add_summary(article, model = "llama3.1", host = NULL)
}
\arguments{
\item{article}{A data frame or tibble containing at least a \code{"prompt"} column, which is created using \code{build_prompt()} or \code{add_prompt()}.}

\item{model}{Character string. The name of the LLM model to use for generating summaries. Default is \code{"llama3.1"}.}

\item{host}{Character string or NULL. The host to be used for the \code{ollamar::generate} function. Default is NULL.}
}
\value{
A modified data frame of class \code{article_summary}, including an additional column \code{"summary"} containing the generated summaries.
}
\description{
This function generates concise summaries for each article in a given data frame, using the specified language model (LLM).
The summaries are generated based on the prompts previously added to the data frame.
}
\details{
The function iterates over each article and generates a summary using the specified LLM model. A progress bar is shown to track the summarization process. Any newlines within the text fields are removed to ensure clean formatting. This function is typically used after applying \code{add_prompt()} to prepare a dataset for summarization.

The progress bar updates for each article as the summaries are being generated. The final \code{summary} column will contain the output of the summarization process, ready for further processing or analysis.
}
\examples{
\dontrun{
papers <- get_article(journal = "Nature Medicine")
papers_with_prompts <- add_prompt(papers, nsentences = 3)
summarized_papers <- add_summary(papers_with_prompts)
}

}
\keyword{language-model}
\keyword{summarization}
\keyword{text-processing}
