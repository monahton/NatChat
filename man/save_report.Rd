% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary.R
\name{save_report}
\alias{save_report}
\title{Save Report as CSV and HTML}
\usage{
save_report(input, filename, save_csv, save_html, title, cols, width, verbose, outdir)
}
\arguments{
\item{input}{A data frame containing article data (e.g., "title", "summary", "url").}

\item{filename}{A character string specifying the base filename (without extension).}

\item{save_csv}{Logical. Save output as a CSV file? Default is TRUE.}

\item{save_html}{Logical. Save output as an HTML file? Default is TRUE.}

\item{title}{A character string specifying the HTML page title. Default is "Article Summary Report".}

\item{cols}{A character vector of column names to include in the output. Default is c("title", "summary").}

\item{width}{A numeric vector of column widths for the HTML table. Default is c(1, 3).}

\item{verbose}{Logical. Should messages be printed? Default is TRUE.}

\item{outdir}{A character string specifying the directory to save files. Default is current working directory ".".}
}
\value{
Files are written to disk in the specified formats. The function returns (invisibly) a list of saved file paths.
}
\description{
Save a data frame of article metadata as both a CSV file and an HTML file with a markdown-styled table.
Options are provided to control file format outputs and verbosity.
}
\details{
A timestamp is appended to the base filename to uniquely identify each output.
If both save_csv and save_html are FALSE, no files are saved and a message is issued (if verbose = TRUE).
}
\examples{
\dontrun{
papers <- get_articles(journal = "Nature Medicine")
papers_with_summary <- add_summary(papers)
save_report(papers_with_summary, save_csv = TRUE, save_html = TRUE)
}

}
\keyword{CSV}
\keyword{HTML,}
\keyword{export,}
\keyword{file}
\keyword{markdown,}
